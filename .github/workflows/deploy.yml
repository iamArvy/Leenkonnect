# name: Continuous Integration and Deployment

# on:
#   push:
#     branches: "main"

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # Checkout code
#       - uses: actions/checkout@v3

#       # Set up PHP
#       - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#         with:
#           php-version: "8.2"

#       # Copy the environment file
#       - name: Set Environment Variables
#         run: |
#           php -r "file_exists('.env') || copy('.env.example', '.env');"
#           echo "APP_ENV=production" >> .env
#           echo "APP_DEBUG=false" >> .env
#           echo "DB_CONNECTION=mysql" >> .env
#           echo "DB_HOST=${{ vars.DB_HOST }}" >> .env
#           echo "DB_PORT=3306" >> .env
#           echo "DB_DATABASE=${{ vars.DB_DATABASE }}" >> .env
#           echo "DB_USERNAME=${{ vars.DB_USERNAME }}" >> .env
#           echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
#           echo "SUPERUSER_EMAIL= ${{vars.SUPERUSER_EMAIL}}" >> .env
#           echo "SUPERUSER_PASSWORD=${{secrets.SUPERUSER_PASSWORD}}" >> .env
#       # Check if APP_KEY is set, generate it if not
#       - name: Check and Generate Application Key if Needed
#         run: |
#           if ! grep -q "APP_KEY=" .env; then
#             php artisan key:generate --force
#           else
#             echo "APP_KEY already set, skipping generation."
#           fi

#       # Install dependencies
#       - name: Install Dependencies
#         run: |
#           composer install --no-dev --optimize-autoloader
#           npm install

#       # Clear cache and optimize
#       - name: Clear Config and Cache
#         run: |
#           php artisan config:clear
#           php artisan route:clear

#       # Set permissions
#       - name: Set Directory Permissions
#         run: chmod -R 777 storage bootstrap/cache

#       # Build frontend assets
#       - name: Build Frontend Assets
#         run: npm run build

#       # Upload built assets as artifact (optional)
#       - name: Upload Artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: dist
#           path: public/

#       # Deploy to FTP server
#       - name: Deploy to Server
#         uses: SamKirkland/FTP-Deploy-Action@v4.3.5
#         with:
#           server: ${{ vars.FTP_SERVER }}
#           username: ${{ vars.FTP_USERNAME }}
#           password: ${{ secrets.FTP_PASSWORD }}
#           server-dir: /laravel/
